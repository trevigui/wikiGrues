/*On commence par sélectionner tout avec le wildcard, puis on applique
une marge et padding uniformes pour ignorer les différences entre chaque
navigateur*/

/*Ne pas oublier les espaces après les doubles points ni les points-virgules */
/*Ne pas utiliser de virgules pour les décimales*/
/*Les sélecteurs personnalisés sont sensible à la casse.*/

/*Il faut mettre le @font-face au début du code car il invoque la police au début du chargement du css (après que le css a été invoqué par le css).*/
@font-face {
	font-family: 'Roboto';
	src: url(‘/fonts/Roboto-Regular.woff2’) format(‘woff2’),
		url(‘/fonts/Robot-Regular.ttf’) format(‘truetype’)
}

*{
    /* Marge = marge extérieure à notre boîte*/
    /* Padding = marge intérieure à notre boîte, utilisée pour agrandir facilement des éléments en responsive*/
    box-sizing: border-box; /* Alignement au bord de l'écran */
    /* autre méthode facile pour les polices courantes => font-family: Calibri; */
    font-family: 'Roboto', sans-serif;
}

    /* Mettre des pourcentages plutôt que des px dans la limite width arbitraire change le comportemetn du zoom. Tester en mode mobile sur l'inspecteur */


/******************************************************* Exemple *********************************************************************/

/* la suivante ligne h1 est un sélecteur,
ce qui est contenu à l'intérieur (e.g. color) est une valeur*/
h1{
    color:#006900;
}

/******************************************************* Header *********************************************************************/

.logo{
    /* Quand width est utilisé le paramètre height n'est souvent pas nécessaire car width change aussi la hauteur. */
    width: 4em;
    border-radius: 50%;
   /* les valeurs de la box-shadow sont X-axis, Y-axis, blur, et spread.*/
   box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5) ;
   /*L'unité px em ou rem doit être collée au nombre choisi pour fonctionner*/

   animation: rainbowww 13s linear infinite;
}

.desktopMenu .desktopList {
    display: flex ;
    align-items: center;
}

/*Pour agir sur un enfant de header, je préfère agir sur le nav que le div.
Agir sur le div ne fonctionnerait pas par défaut. nav=plus facile*/
/*On ne met pas de point car il n'y a pas d'appel de classe*/
.desktopMenu .desktopList li {
/* display: inline */
    display: inline;
    margin-left: 20px; /* On utilisera gap si on veut que l'espace soit entre chaque élément,
                        Ici, je préfère utilsier margin-left pour éloigner mon navbar du logo */
    text-shadow: 3px 3px 0px rgba(0,0,0,0.3) ;
}

/*Quand utilise comme sélecteur CSS une balise HTML préexistante comme main (qui n'est pas une classe qu'on a créée nous-même,
On ne mets pas de point devant pour l'appeler*/
.desktopMenu .desktopList li a {
    /* On enlève le soulignement des liens "a" (et les bullet points ?)*/
    /* On ne peut pas appliquer cette option au <li> juste avant
    qui n'est pas considéré comme un parent car il est sur la même ligne*/
    text-decoration: none;
    color: khaki;
}

/* On peut utiliser :hover ou :visited ici ((:visited ne fonctionnera que si toutes nos pages ont des headers))*/
/* On pourra utiliser :focus (barre de texte clignotante) ou :active avec le paramètres color-background */
.desktopMenu .desktopList li a:hover {
    color:#556b2f;
}

.topButton {
    width: 5em;
    height: 3em;
    border-style: inset;
    /* On mettra un border-radius de 50% (tout pour un cercle*/
    border-radius: 10% 10% 10% 10% / 20% 20% 20% 20% ;
    border-color: white;
    border-width: 1px;
    background:#9ca86a;
    transition-duration: 0.4s;
}

/*Pour indiquer le changement sur hover, il faut ajouter hover SANS ajouter d'espace après le double-point.*/
.topButton:hover {
   background-color: white;
}


.desktopMenu {
    display: none; /* REMETTRE EN DISPLAY-FLEX !!!!!! */

    /* desktopMenu agit sur le logo ET les éléments de menus mais pas les éléments de menu
    individuellement, donc je ne peux pas encore horizontaliser tout individuellement*/
    /* Je répartis la photo et les éléments de menu sur la page au centre*/
    background-color: darkolivegreen;
    font-size: 1em; /*(Ici, cela influence la taille de mon logo)*/
}

/* --------------------------------------------------------------------------------Burger menu-------------------------------------------------------------------------------------------------------- */

/* On ne met pas mon logo dans la nav, uniquement les liens/boutons */


.mobileMenu {
    /* Pour que le menu reste en place quand on scroll */
    position: fixed;
}

.mobileLogo {
    width:1em;
}

.mobileList {
    display: flex;
    flex-direction: column;
    background: darkolivegreen;
    overflow: hidden;
    width: 200px;
    /* Pour que les liens soient "rangés" par défaut */
    transform: translateX(-200px);
}

.mobileList li a {
    text-decoration: none;
    color: khaki;
}

#hamburger {
    /* Pour que la checkbox ne s'affiche pas */
    display: none;
}
  
#hamburger-logo {
  /* Pour que le curseur soit un pointeur */
  cursor: pointer;
  background: darkolivegreen;
  width: 200px;
  /* forme influencée par la forme parente ? */
  display: block;
  color: white;
  /* Pour que le menu hamburger s'affiche toujours */
  text-align: right;
  /* Pour que le menu hamburger soit "rangé" par défaut */
  transform: translateX(-168px);
  padding: 10px;
}

#hamburger-logo, .mobileList {
  /* Pour qu'il y ait une animation */
  /* Ne pas le mettre uniquement sur le #hamburger:checked permet de mettre la transition à l'ouverture et la fermeture. */
  transition: 0.5s;
  outline: solid darkolivegreen 1px /* Cela me permet de remplir la ligne de 1px d'espace vide entre mon hamburger-logo et .mobileList */
}

/* Lorsque #hamburger est coché, le #hamburger-logo et le .mobileList qui sont dans le même parent changent de propriété. */
#hamburger:checked ~ #hamburger-logo, #hamburger:checked ~ .mobileList {
  /* Changement de la position pour afficher les menus */
  transform: translate(0);
  shape-outside: circle(50%);
}

.mobileList a {
  color: white;
  text-decoration: none;
  padding: 10px;
  width: 100%; /* Permet de m'assurer que les liens prennent toute la longueur du .mobileList et que l'arrière plan en a:hover n'entoure pas que le texte mais le bouton au complet */
}

.mobileList a:hover {
  background: rgb(144, 163, 109);
}

/************************************************************************************ body ************************************************************************************************************/

body{
    /* On peut rajouter la valeur cover center au paramètre background*/
    /* On peut utiliser soit la paramètre background: ou background-repeat: ou background-machin */  
    background-image: url("background.jpg");
    background-repeat: repeat;
    background-size : 1em;
    margin: 0 ; /* Nécessaire pour que la navbar et le menu ne flottent pas et soit collée au bord gauche */
    /* On peut aussi faire un background-position, background: url(), background: linear-gradient(90deg, #8360c3, #2ebf92); opacity:0,3; */
}

.content {
    margin-top: 1em;
    /* Je ne mets pas de margin: bottom pour éviter une double espacement entre les sections */
    margin-left: 1em;
    margin-right: 1em;
    padding: 1em;
    border: 1 px;
    border-color:#556b2f;
    border-style: solid;
}

.images {
    width: 18em;
    border-width: 1em;
    border-color: darkolivegreen;
    border-style: none;
    border-radius: 69% 31% 43% 57% / 48% 26% 74% 52% ;
}

.section1 {
    margin-top: 2em;
    margin-bottom: 1em;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
}

.section2 {
    margin-bottom: 1em;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
}

.section2 a {
    text-decoration: none ;
    color: black ;
}

.margin2 {
    margin-left: 1em;
    margin-top: 1em;
    display: flex;
    justify-content: center
}
.fond2 {
    width: auto;
    height: auto;
    background: linear-gradient(180deg, #9ca86a, #556b2f);
    /* Attention  à ne pas utiliser de virgules pour les décimales ! ça casse tout !*/
    opacity: 1;
}

.texte a {
    text-decoration: none;
    color: black;
}

.spiel {
margin-bottom: 2em;
text-align:justify;
margin-right: 1em;
}

.flashcard {
    border: 1 px;
    border-color:#556b2f;
    border-style: solid;
    margin-bottom: 1em;
}

/* Pour sélectionner spécifiquement l'attribut "text" de input, je tape input[type="text"]*/
/* Pour sélectionner plusieurs attributs dans input, je crée un tableau à l'aide de is  */
input:is([type="text"], [type="email"], [type="number"], [type="tel"], [type="url"], [type="search"], [type="password"], [type="date"], [type="month"], [type="week"], [type="time"], [type="datetime-local"], [type="color"]) {
    background-color: #9ea77c;
   }

textarea {
    resize:none;
    background-color: green; 
 
   animation: rainbowww 13s linear infinite;

}

@keyframes rainbowww {
    0%{
        background-color: rgb(198, 198, 126);
    }
    25%{
       background-color: rgb(170, 216, 124);
    }
    45%{
        background-color: rgb(198, 198, 126);
    }
    70%{
        background-color: rgb(170, 216, 124);
    }
    85%{
        background-color: rgb(198, 198, 126);
    }
    100%{
        background-color: rgb(170, 216, 124);
     }
}

select {
    background-color: #9ea77c;
}

/* ------------------------------------------------- TABLEAUX BOITES ------------------------------------------------------------------------------------ */

.boxContainer {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr; /* Trois valeurs = trois colonnes */ /* 1fr = 150 px */
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr; /* L'unité fr (fractionnement) est responsive et spécifique au display:grid */
    gap: 10px; /*Idem que margin, permet d'éviter de devoir choisir une direction (left ou right) */
}

th {
    border: 4px solid darkolivegreen;
    padding: 4px ; /* Pour centrer de manière globale approximativement */
    text-align: center; /* Pour centrer horizontalement */
}

td {
    border: 2px solid darkolivegreen ;
    padding: 4px ;
    text-align: center;
}

table {
    margin:  0 auto ; /* s'applique sur l'objet-même. Permet de centrer un objet au centre de son conteneur parent. (Top et Bottom 0) (left et right rauto)*/
    border-collapse: collapse ; /* Permet d'enlever l'écart entre les cellules et avoir un tableau
                                Qui ressemble à un tableau*/
}

caption {
    font-size: 60px;
}

.boxAll {
    /* Pour notre grille on peut utiliser grid-column-start:1, grid-column-end:4, grid-row-start, grid-row-end */
    /* On peut aussi utiliser les déclarations grid-row: 1 / 4 (start et end) et grid-column: 1 / 3 */
    border: 1px solid #556b2f ;
    height: 100px; /* Cette boîte force une hauteur à la boîte, ce qui peut rentrer en conflit
                    avec les valeurs indiqués dans .contaier {grid-template-column} */
padding: 1em;
}


.box1 {
    grid-column: 1 / 5 ; /*Dans mon boxContainer, j'ai défini 5 colonnes, ma première colonne ira de l'arête de colonne 1 à la 5.*/
    grid-row: 1 / 2 ;
    }

.box2 {
    grid-column: 1 / 3 ;
    grid-row: 2 / 3 ;
}

.box3 {
    grid-column: 3 / 5 ;
    grid-row: 2 / 4 ;
    /* Ne pouvant pas lier la classe boxAll à ma boîte 3, je dois le respécifier dans sa classe propre*/
    height: 2fr;
    border: 1px solid #556b2f ;
}

.box4 {
    grid-column: 1 / 2 ;
    grid-row: 3 / 4 ;
}

.box5 {
    grid-column: 2 / 3 ;
    grid-row: 3 / 4 ;
}

.box6 {
    grid-column: 1 / 3 ;
    grid-row: 4 / 5 ;
}

.box7 {
    grid-column: 3 / 5 ;
    grid-row: 4 / 5 ;
}

.box8 {
    grid-column: 1 / 5 ;
    grid-row: 5 / 6 ;
}

/* ------------------------------------Boîtes de la deuxième section-----------------------------*/

.box2_2 {
    grid-column: 1 / 3 ;
    grid-row: 2 / 4 ;
        /* Ne pouvant pas lier la classe boxAll à ma boîte 2 de la section 2, je dois le respécifier dans sa classe propre*/
    height: 2fr;
    border: 1px solid #556b2f ;
}

.box3_2 {
    grid-column:3 / 4 ;
    grid-row: 2 / 3 ;
}

.box4_2 {
    grid-column: 4 / 5 ;
    grid-row: 2 / 3 ;
}

.box5_2 {
    grid-column: 3 / 5 ;
    grid-row: 3 / 4 ;
}

.box6_2 {
    grid-column: 1 / 5 ;
    grid-row: 4 / 5 ;
}

.box7_2 {
    grid-column: 1 / 2 ;
    grid-row: 5 / 6 ;
}

.box8_2 {
    grid-column: 2 / 5 ;
    grid-row: 5 / 6 ;
}

#bottomButton {
    width: 5em;
    height: 5em;
    border-style: solid;
    /* On mettra un border-radius de 50% (tout pour un cercle*/
    border-radius: 50% ;
    border-color:#556b2f;
    background:#9ca86a;
    transition-duration: 0.4s;
}
.upArrow {
    width: 20px;
}

/******************************************************* footer *********************************************************************/

.pageBottom {
    background-color: darkolivegreen;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.navBottom ul li {
    display: inline ;
    color: khaki;
    margin-left: 20px;
}